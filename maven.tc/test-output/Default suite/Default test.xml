<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="NDI-LAP-563" name="Default test" tests="8" failures="0" timestamp="27 Sep 2020 08:25:48 GMT" time="12.36" errors="0">
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at TestCases.BaseTestClass.aftermethod(BaseTestClass.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:712)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
    </failure>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@BeforeMethod beforMethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforMethod -->
  <testcase name="@AfterMethod aftermethod" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="verifyHeading" time="0.131" classname="TestCases.SanityTestcases"/>
  <testcase name="verifyAccomodationLabel" time="0.001" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- verifyAccomodationLabel -->
  <testcase name="CheckLabels" time="0.002" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- CheckLabels -->
  <testcase name="verifyHotelDropdown" time="0.001" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- verifyHotelDropdown -->
  <testcase name="matchRoomnos" time="0.001" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- matchRoomnos -->
  <testcase name="matchRoomDropdown" time="0.001" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- matchRoomDropdown -->
  <testcase name="checkbox" time="0.001" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- checkbox -->
  <testcase name="checkTotalLabel" time="0.0" classname="TestCases.SanityTestcases">
    <skipped/>
  </testcase> <!-- checkTotalLabel -->
</testsuite> <!-- Default test -->
