<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="7" failed="0" total="8" passed="1">
  <reporter-output>
    <line>
      <![CDATA[in the before suite]]>
    </line>
    <line>
      <![CDATA[settings done]]>
    </line>
    <line>
      <![CDATA[CONFIG LOAD PROPERTIIES]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="12360" started-at="2020-09-27T08:25:36Z" finished-at="2020-09-27T08:25:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12360" started-at="2020-09-27T08:25:36Z" finished-at="2020-09-27T08:25:48Z">
      <class name="TestCases.SanityTestcases">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforesuite" is-config="true" duration-ms="395" started-at="2020-09-27T13:55:36Z" finished-at="2020-09-27T13:55:36Z">
          <reporter-output>
            <line>
              <![CDATA[in the before suite]]>
            </line>
            <line>
              <![CDATA[settings done]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforeTest" is-config="true" duration-ms="11747" started-at="2020-09-27T13:55:36Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
            <line>
              <![CDATA[CONFIG LOAD PROPERTIIES]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="verifyHeading()[pri:1, instance:TestCases.SanityTestcases@1ed4004b]" name="verifyHeading" duration-ms="131" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeading -->
        <test-method status="PASS" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.SanityTestcases.verifyHeading()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="FAIL" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeading status=SUCCESS method=SanityTestcases.verifyHeading()[pri:1, instance:TestCases.SanityTestcases@1ed4004b] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at TestCases.BaseTestClass.aftermethod(BaseTestClass.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:712)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="verifyAccomodationLabel()[pri:2, instance:TestCases.SanityTestcases@1ed4004b]" name="verifyAccomodationLabel" duration-ms="1" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccomodationLabel -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="CheckLabels()[pri:3, instance:TestCases.SanityTestcases@1ed4004b]" name="CheckLabels" duration-ms="2" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckLabels -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="verifyHotelDropdown()[pri:3, instance:TestCases.SanityTestcases@1ed4004b]" name="verifyHotelDropdown" duration-ms="1" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHotelDropdown -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="matchRoomnos()[pri:4, instance:TestCases.SanityTestcases@1ed4004b]" name="matchRoomnos" duration-ms="1" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- matchRoomnos -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="matchRoomDropdown()[pri:5, instance:TestCases.SanityTestcases@1ed4004b]" name="matchRoomDropdown" duration-ms="1" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- matchRoomDropdown -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="checkbox()[pri:6, instance:TestCases.SanityTestcases@1ed4004b]" name="checkbox" duration-ms="1" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkbox -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="beforMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="beforMethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforMethod -->
        <test-method status="SKIP" signature="checkTotalLabel()[pri:7, instance:TestCases.SanityTestcases@1ed4004b]" name="checkTotalLabel" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTotalLabel -->
        <test-method status="SKIP" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="aftermethod" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:TestCases.SanityTestcases@1ed4004b]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-09-27T13:55:48Z" finished-at="2020-09-27T13:55:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestCases.SanityTestcases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
